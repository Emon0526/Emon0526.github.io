[{"title":"css居中","url":"http://yoursite.com/2017/12/08/css居中/","content":"<p>开发过程中，经常会遇到需要居中（水平居中、垂直居中、水平 + 垂直居中）的情况。</p>\n<p>主要有以下几种：</p>\n<ol>\n<li>水平居中：内联元素（inline）</li>\n<li>水平居中：单个块级元素（block）</li>\n<li>水平居中：多个块级元素</li>\n<li>水平居中：多个块级元素（使用 flexbox 布局来解决）</li>\n<li>垂直居中：单行的内联元素</li>\n<li>垂直居中：多行的内联元素</li>\n<li>垂直居中：已知高度的块级元素</li>\n<li>垂直居中：未知高度的块级元素</li>\n<li>水平垂直居中：已知高度和宽度的元素</li>\n<li>水平垂直居中：未知高度和宽度的元素</li>\n<li>水平垂直居中：使用 flexbox 布局来解决</li>\n</ol>\n<h1 id=\"水平居中\"><a href=\"#水平居中\" class=\"headerlink\" title=\"水平居中\"></a>水平居中</h1><h2 id=\"内联元素\"><a href=\"#内联元素\" class=\"headerlink\" title=\"内联元素\"></a>内联元素</h2><p>首先使用一个 block 元素作为将该 inline 的父元素，然后为该 block 元素添加一个居中属性即可</p>\n<blockquote>\n<p>适用元素：文字，链接，及其其它 inline 或者 inline-* 类型元素（如 inline-block，inline-table，inline-flex）</p>\n</blockquote>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">/* 注意是为 父元素 添加以下属性 */</div><div class=\"line\">.parent-center &#123; </div><div class=\"line\">\ttext-align: center;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"单个块级元素\"><a href=\"#单个块级元素\" class=\"headerlink\" title=\"单个块级元素\"></a>单个块级元素</h2><p>只需要设置左右外边距（即 margin-left, margin-right）为 auto 即可：</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.center &#123; </div><div class=\"line\">\t/* 上下外边距可以根据需要自行调整 */ </div><div class=\"line\">\tmargin: 0px auto;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"多个块级元素\"><a href=\"#多个块级元素\" class=\"headerlink\" title=\"多个块级元素\"></a>多个块级元素</h2><p>如果有多个块级元素需要水平排列，可以这样做：</p>\n<p>将每个块级元素的 display属性 设置为 inline-block，再把 父元素 的 text-align属性 设置为 center<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.parent-center &#123; </div><div class=\"line\">\ttext-align: center;</div><div class=\"line\">&#125;</div><div class=\"line\">.center &#123; </div><div class=\"line\">\tdisplay: inline-block;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"多个块级元素（使用-flexbox-布局来解决）\"><a href=\"#多个块级元素（使用-flexbox-布局来解决）\" class=\"headerlink\" title=\"多个块级元素（使用 flexbox 布局来解决）\"></a>多个块级元素（使用 flexbox 布局来解决）</h2><p>只需为 父元素 设置好 display 及 justify-content 属性即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">.parent-center &#123; </div><div class=\"line\">\tdisplay: flex; </div><div class=\"line\">\tjustify-content: center;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h1 id=\"垂直居中\"><a href=\"#垂直居中\" class=\"headerlink\" title=\"垂直居中\"></a>垂直居中</h1><h2 id=\"单行的内联元素\"><a href=\"#单行的内联元素\" class=\"headerlink\" title=\"单行的内联元素\"></a>单行的内联元素</h2><p>要将内联元素（inline, inline-* 等元素）垂直居中，只需将该元素的 height 和 line-height 都设置为 父元素 的高度即可。</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">.center &#123; </div><div class=\"line\">\t/* 假设父元素高度为 180px，则将该内联元素的高度及行高也设置为 180px */ </div><div class=\"line\">\theight: 180px; </div><div class=\"line\">\tline-height: 180px;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"多行的内联元素\"><a href=\"#多行的内联元素\" class=\"headerlink\" title=\"多行的内联元素\"></a>多行的内联元素</h2><p>设置父元素的display及vertical-align样式即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">.parent-center &#123; display: table-cell; vertical-align: middle;&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"已知高度的块级元素\"><a href=\"#已知高度的块级元素\" class=\"headerlink\" title=\"已知高度的块级元素\"></a>已知高度的块级元素</h2><p>设置好以下属性即可</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">\t.center &#123; </div><div class=\"line\">\theight: 120px; </div><div class=\"line\">\tposition: absolute; </div><div class=\"line\">\tpadding: 0; </div><div class=\"line\">\ttop: 50%; </div><div class=\"line\">\tmargin-top: -60px; /* 高度除以2的负数，如果没有使用 box-sizing: border-box; 要计算上border和padding */</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<h2 id=\"未知高度的块级元素\"><a href=\"#未知高度的块级元素\" class=\"headerlink\" title=\"未知高度的块级元素\"></a>未知高度的块级元素</h2><p>与已知高度的块级元素的垂直居中类似，只是使用transform代替margin-top即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">\t.center &#123; </div><div class=\"line\">\tposition: absolute; </div><div class=\"line\">\ttop: 50%; </div><div class=\"line\">\ttransform: translateY(-50%);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h1 id=\"水平垂直居中\"><a href=\"#水平垂直居中\" class=\"headerlink\" title=\"水平垂直居中\"></a>水平垂直居中</h1><h2 id=\"已知高度和宽度的元素\"><a href=\"#已知高度和宽度的元素\" class=\"headerlink\" title=\"已知高度和宽度的元素\"></a>已知高度和宽度的元素</h2><p>与已知高度的块级元素的垂直居中类似，只是加多了left及margin-left<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">.center &#123; </div><div class=\"line\">\twidth: 160px; </div><div class=\"line\">\theight: 100px; </div><div class=\"line\">\tposition: absolute; </div><div class=\"line\">\ttop: 50%; </div><div class=\"line\">\tleft: 50%; </div><div class=\"line\">\tmargin-top: -50px; /* height 的一半的负值 */ </div><div class=\"line\">\tmargin-left: -80px; /* width 的一半的负值 */</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"未知高度和宽度的元素\"><a href=\"#未知高度和宽度的元素\" class=\"headerlink\" title=\"未知高度和宽度的元素\"></a>未知高度和宽度的元素</h2><p>与未知高度的块级元素的垂直居中类似，只是加多了left及transform-x值<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\">.center &#123; </div><div class=\"line\">\tposition: absolute; </div><div class=\"line\">\ttop: 50%; </div><div class=\"line\">\tleft: 50%; </div><div class=\"line\">\ttransform: translate(-50%, -50%);</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n<h2 id=\"使用-flexbox-布局来解决\"><a href=\"#使用-flexbox-布局来解决\" class=\"headerlink\" title=\"使用 flexbox 布局来解决\"></a>使用 flexbox 布局来解决</h2><p>对父元素做以下设置即可<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div></pre></td><td class=\"code\"><pre><div class=\"line\">.parent-center &#123; </div><div class=\"line\">\tdisplay: flex; </div><div class=\"line\">\tjustify-content: center; </div><div class=\"line\">\talign-items: center;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure></p>\n","categories":[],"tags":[]},{"title":"title","url":"http://yoursite.com/2017/09/21/title/","content":"<p>123</p>\n","categories":[],"tags":[]},{"title":"page","url":"http://yoursite.com/2017/09/21/page/","content":"<h1 id=\"我将用md格式在这写一行内容\"><a href=\"#我将用md格式在这写一行内容\" class=\"headerlink\" title=\"我将用md格式在这写一行内容\"></a>我将用md格式在这写一行内容</h1>","categories":[],"tags":[]},{"title":"aishasha","url":"http://yoursite.com/2017/07/20/aishasha/","content":"<h1 id=\"这是很好很长的一生。\"><a href=\"#这是很好很长的一生。\" class=\"headerlink\" title=\"这是很好很长的一生。\"></a>这是很好很长的一生。</h1><ul>\n<li>哈哈哈</li>\n<li>呵呵呵</li>\n<li>嘿嘿嘿</li>\n</ul>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">console.log(&quot;爱莎莎真是太好了！！！&quot;);</div></pre></td></tr></table></figure>\n<hr>\n<blockquote>\n<p>aishasha</p>\n</blockquote>\n<hr>\n<table>\n<thead>\n<tr>\n<th>aaa</th>\n<th>aaa</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>aaa</td>\n<td>aaa</td>\n</tr>\n<tr>\n<td>aaa</td>\n<td>aaa</td>\n</tr>\n</tbody>\n</table>\n","categories":[],"tags":[]},{"title":"ES5数组新增方法","url":"http://yoursite.com/2017/07/13/ES5数组新增方法/","content":"<blockquote>\n<p>早在很久之前就看到有人提出lodash underscore 这类的lib可能会被淘汰掉<br>在ES5中，数组新增了以下方法，其参数都是 function 类型：</p>\n</blockquote>\n<ul>\n<li>forEach</li>\n<li>map</li>\n<li>filter</li>\n<li>indexOf</li>\n<li>reduce</li>\n</ul>\n<h1 id=\"forEach-循环\"><a href=\"#forEach-循环\" class=\"headerlink\" title=\"forEach 循环\"></a>forEach 循环</h1><p>这个方法很像jq中的ecah()<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">$.each([], function(index, value, array) &#123;</div><div class=\"line\">    // ...</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure></p>\n<p>forEach 的 function 回调 有三个参数：<br>第 1 个是遍历的数组内容<br>第 2 个是对应的数组索引<br>第 3 个是数组本身</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[].forEach(function(value, index, array) &#123;</div><div class=\"line\">    // ...</div><div class=\"line\">&#125;);</div></pre></td></tr></table></figure>\n<p>需要注意的是第 1 个和第 2 个参数正好是相反的。</p>\n<p>数组求和的实现<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div></pre></td><td class=\"code\"><pre><div class=\"line\">var sum = 0;</div><div class=\"line\"></div><div class=\"line\">[1, 2, 3, 4].forEach(function (item, index, array) &#123;</div><div class=\"line\">  console.log(array[index] == item); // true</div><div class=\"line\">  sum += item;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">alert(sum); // 10</div></pre></td></tr></table></figure></p>\n<h1 id=\"map-映射\"><a href=\"#map-映射\" class=\"headerlink\" title=\"map 映射\"></a>map 映射</h1><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[].map(function(value, index, array)&#123;</div><div class=\"line\">    //...</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>参数和forEach()类似</p>\n<p>数组平方<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\">var data = [1, 2, 3, 4];</div><div class=\"line\"></div><div class=\"line\">var arrayOfSquares = data.map(function (item) &#123;</div><div class=\"line\">  return item * item;</div><div class=\"line\">&#125;);</div><div class=\"line\"></div><div class=\"line\">alert(arrayOfSquares);// 1, 4, 9, 16</div></pre></td></tr></table></figure></p>\n<p>回调函数需要有return</p>\n<p>#filter 过滤</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[].filter(function(value, index, array)&#123;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>返回数组中大于10的数字组成新数组</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div></pre></td><td class=\"code\"><pre><div class=\"line\">[1,2,3,4,5,6,7,8,9,10,11,12,13].filter(function(e)&#123;</div><div class=\"line\">    return e &gt; 10;</div><div class=\"line\">&#125;)</div><div class=\"line\">//[11,12,13]</div></pre></td></tr></table></figure>\n<p>#indexOf()<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div></pre></td><td class=\"code\"><pre><div class=\"line\">[].indexOf(function()&#123;</div><div class=\"line\">//...</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure></p>\n<p>和字符串的indexOf方法类似</p>\n<p>返回数组的整数索引值，如果没有找到，返回-1</p>\n<p>判断一个元素是否在数组里，不在则更新数组<br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div></pre></td><td class=\"code\"><pre><div class=\"line\">function updateArr(nums, num) &#123;</div><div class=\"line\">        if (nums.indexOf(num) == -1) &#123;</div><div class=\"line\">            nums.push(num);</div><div class=\"line\">            console.log(&apos;新数组为 : &apos; + nums);</div><div class=\"line\">        &#125; else if (nums.indexOf(num) &gt; -1) &#123;</div><div class=\"line\">            console.log(num + &apos; 已存在.&apos;);</div><div class=\"line\">        &#125;</div><div class=\"line\">    &#125;</div><div class=\"line\"></div><div class=\"line\">    var nums = [1];</div><div class=\"line\">    updateArr(nums, 1) //1 已存在.</div><div class=\"line\">    updateArr(nums, 2) //新数组为 : 1,2</div></pre></td></tr></table></figure></p>\n<p>#reduce 减少</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div></pre></td><td class=\"code\"><pre><div class=\"line\">[].reduce(function()&#123;</div><div class=\"line\">&#125;)</div></pre></td></tr></table></figure>\n<p>reduce()方法回调函数中有四个参数<br>之前值、当前值、索引值以及数组本身</p>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\">var total = [0, 1, 2, 3].reduce(function(sum, value) &#123;</div><div class=\"line\">  return sum + value;</div><div class=\"line\">&#125;, 0);</div><div class=\"line\">// total is 6</div><div class=\"line\"></div><div class=\"line\">var flattened = [[0, 1], [2, 3], [4, 5]].reduce(function(a, b) &#123;</div><div class=\"line\">  return a.concat(b);</div><div class=\"line\">&#125;, []);</div><div class=\"line\">// flattened is [0, 1, 2, 3, 4, 5]</div></pre></td></tr></table></figure>","categories":[],"tags":[]},{"title":"快速排序的实现","url":"http://yoursite.com/2017/07/13/快速排序的实现/","content":"<h1 id=\"快速排序\"><a href=\"#快速排序\" class=\"headerlink\" title=\"快速排序\"></a>快速排序</h1><ol>\n<li>定义一个 quickSort 函数，它的参数是一个数组。</li>\n<li>检查数组的元素个数，如果小于等于 1，就返回。</li>\n<li>选择 “基准”（pivot），并将其与原数组分离，再定义两个空数组，用来存放一左一右的两个子集。</li>\n<li>开始遍历数组，小于 “基准” 的元素放入左边的子集，大于基准的元素放入右边的子集。</li>\n<li>使用递归不断重复这个过程，就可以得到排序后的数组。</li>\n<li>使用的时候，直接调用 quickSort() </li>\n</ol>\n<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div><div class=\"line\">26</div><div class=\"line\">27</div><div class=\"line\">28</div><div class=\"line\">29</div><div class=\"line\">30</div><div class=\"line\">31</div><div class=\"line\">32</div><div class=\"line\">33</div></pre></td><td class=\"code\"><pre><div class=\"line\">&lt;!DOCTYPE html&gt;</div><div class=\"line\">&lt;html&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;head&gt;</div><div class=\"line\">    &lt;meta charset=&quot;utf-8&quot;&gt;</div><div class=\"line\">    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;</div><div class=\"line\">    &lt;title&gt;&lt;/title&gt;</div><div class=\"line\">    &lt;link rel=&quot;stylesheet&quot; href=&quot;&quot;&gt;</div><div class=\"line\">&lt;/head&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;body&gt;</div><div class=\"line\">    &lt;script&gt;</div><div class=\"line\">    var quickSort = function(arr) &#123;</div><div class=\"line\">        if (arr.length &lt;= 1) &#123;</div><div class=\"line\">            return arr;</div><div class=\"line\">        &#125;</div><div class=\"line\">        var pivotIndex = Math.floor(arr.length / 2);</div><div class=\"line\">        var pivot = arr.splice(pivotIndex, 1)[0];</div><div class=\"line\">        var left = [];</div><div class=\"line\">        var right = [];</div><div class=\"line\">        for (var i = 0; i &lt; arr.length; i++) &#123;</div><div class=\"line\">            if (arr[i] &lt; pivot) &#123;</div><div class=\"line\">                left.push(arr[i]);</div><div class=\"line\">            &#125; else &#123;</div><div class=\"line\">                right.push(arr[i]);</div><div class=\"line\">            &#125;</div><div class=\"line\">        &#125;</div><div class=\"line\">        return quickSort(left).concat([pivot], quickSort(right));</div><div class=\"line\">    &#125;;</div><div class=\"line\">    &lt;/script&gt;</div><div class=\"line\">&lt;/body&gt;</div><div class=\"line\"></div><div class=\"line\">&lt;/html&gt;</div></pre></td></tr></table></figure>","categories":[],"tags":[]},{"title":"外边距合并","url":"http://yoursite.com/2017/07/13/外边距合并/","content":"<ul>\n<li>相邻兄弟元素</li>\n<li>父元素和子元素</li>\n<li>空元素</li>\n</ul>\n<hr>\n","categories":[],"tags":[]},{"title":"test","url":"http://yoursite.com/2017/06/22/test/","content":"<p>##测试</p>\n","categories":[],"tags":[]},{"title":"3rd article","url":"http://yoursite.com/2017/06/05/3rd-article/","content":"<p>#这是测试博客</p>\n","categories":[],"tags":[]},{"title":"2nd article","url":"http://yoursite.com/2017/06/05/2nd-article/","content":"<p>呜啦啦啦啦啦～</p>\n","categories":[],"tags":[]},{"title":"1st article","url":"http://yoursite.com/2017/06/05/1st-article/","content":"<figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div></pre></td><td class=\"code\"><pre><div class=\"line\">var api = &apos;https://api.github.com/users/torvalds&apos;</div><div class=\"line\">var xhr = new XMLHttpRequest() // 创建XMLHttpRequest对象</div><div class=\"line\"></div><div class=\"line\">if(window.XMLHttpRequest)&#123; // 兼容处理</div><div class=\"line\">    xhr = new XMLHttpRequest()</div><div class=\"line\">&#125;else&#123;</div><div class=\"line\">    xhr = new ActiveXObject(&apos;Microsoft.XMLHTTP&apos;)// 兼容ie6以下下</div><div class=\"line\">&#125;</div><div class=\"line\"></div><div class=\"line\">xhr.open(&apos;get&apos;,api,true)    //设置请求信息    </div><div class=\"line\">xhr.send()  //提交请求</div><div class=\"line\"></div><div class=\"line\">//等待服务器返回内容</div><div class=\"line\">xhr.onreadystatechange = function() &#123;</div><div class=\"line\">    if ( xhr.readyState == 4 &amp;&amp; xhr.status == 200 ) &#123;</div><div class=\"line\">         console.log(JSON.parse(xhr.responseText)) // 使用JSON.parse解析JSON字符串</div><div class=\"line\">    &#125; </div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>","categories":[],"tags":[]},{"title":"Hello World","url":"http://yoursite.com/2017/06/05/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\" target=\"_blank\" rel=\"external\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\" target=\"_blank\" rel=\"external\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\" target=\"_blank\" rel=\"external\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\" target=\"_blank\" rel=\"external\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo new <span class=\"string\">\"My New Post\"</span></div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\" target=\"_blank\" rel=\"external\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo server</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/server.html\" target=\"_blank\" rel=\"external\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo generate</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\" target=\"_blank\" rel=\"external\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">$ hexo deploy</div></pre></td></tr></table></figure>\n<p>More info: <a href=\"https://hexo.io/docs/deployment.html\" target=\"_blank\" rel=\"external\">Deployment</a></p>\n","categories":[],"tags":[]},{"title":"about","url":"http://yoursite.com/about/index.html","content":"","categories":[],"tags":[]},{"title":"category","url":"http://yoursite.com/category/index.html","content":"","categories":[],"tags":[]},{"title":"link","url":"http://yoursite.com/link/index.html","content":"","categories":[],"tags":[]},{"title":"search","url":"http://yoursite.com/search/index.html","content":"","categories":[],"tags":[]},{"title":"project","url":"http://yoursite.com/project/index.html","content":"","categories":[],"tags":[]},{"title":"tag","url":"http://yoursite.com/tag/index.html","content":"","categories":[],"tags":[]}]